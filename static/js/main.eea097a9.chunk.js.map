{"version":3,"sources":["redux/reducers/loginReducer.js","redux/reducers/usersReducer.js","redux/store.js","redux/actions.js","components/AuthProvider.jsx","components/api/apiFetch.js","redux/actionCreators.js","components/api/fetchToken.js","components/api/fetchUsers.js","components/api/fetchUser.js","components/api/fetchEdit.js","components/api/fetchCreate.js","utils/validate.js","components/InputFields.jsx","components/auth/Auth.jsx","components/auth/index.jsx","components/form/index.jsx","components/createForm/index.jsx","components/editForm/index.jsx","components/home/CreateButton.jsx","components/home/header/index.jsx","components/home/users/Header.jsx","components/home/users/User.jsx","components/home/users/index.jsx","components/home/index.jsx","components/routes/AuthRoute.jsx","components/routes/Routes.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","err","isAuth","localStorage","getItem","users","user","editUser","createUser","error","reducers","combineReducers","login","state","action","type","setItem","token","removeItem","form","formReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","AuthProvider","children","URL","apiFetch","url","method","body","obj","headers","TOKEN","JSON","stringify","fetch","then","response","ok","json","Error","createError","data","dispatch","fetchToken","loginSuccess","catch","stopSubmit","_error","getUsers","getData","get","id","fetchUser","getUser","edit","fetchEdit","create","fetchCreate","validate","values","errors","username","length","test","password","first_name","last_name","InputField","meta","input","className","placeholder","autoComplete","touched","reduxForm","props","onSubmit","handleSubmit","Field","component","name","connect","to","Form","title","htmlFor","mapStateToProps","ownProps","initialValues","is_active","createForm","formName","enableReinitialize","CreateForm","clear","useEffect","EditForm","match","params","CreateButton","dispath","logout","onClick","Header","User","renderUsers","map","key","Routes","basename","path","exact","Home","EditFormContainer","AuthContainer","CreateFormContainer","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.eea097a9.chunk.js","sourcesContent":["import { LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT } from \"../actions\";\r\n\r\nconst initialState = {\r\n  err: false,\r\n  isAuth: !!localStorage.getItem('token'),\r\n};\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', action.token);\r\n      return {\r\n        ...state,\r\n        err: false,\r\n        isAuth: true\r\n      };\r\n    case LOGIN_FAIL: \r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        err: true\r\n      };\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        isAuth: false\r\n      }\r\n    default:\r\n      return state;\r\n    }\r\n  }\r\n\r\n  ","import { CLEAR, CREATE_USER, EDIT_USER, ERROR, GET_USER, GET_USERS } from \"../actions\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  user: null,\r\n  editUser: null,\r\n  createUser: null,\r\n  error: null\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case GET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user\r\n      }\r\n    case CREATE_USER:\r\n      return {\r\n        ...state,\r\n        createUser: action.user\r\n      }\r\n    case EDIT_USER:\r\n      return {\r\n        ...state,\r\n        editUser: action.user\r\n      }\r\n    case CLEAR:\r\n      return {\r\n        ...initialState\r\n      }\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error\r\n      }\r\n    default:\r\n      return state;\r\n    }\r\n  }","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { loginReducer } from './reducers/loginReducer';\r\nimport { usersReducer } from './reducers/usersReducer';\r\n\r\nconst reducers = combineReducers({\r\n  login: loginReducer,\r\n  users: usersReducer,\r\n  form: formReducer\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_USERS = 'GET_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const CLEAR = 'CLEAR';\r\nexport const ERROR = 'ERROR';\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../redux/store';\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      {children}\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default AuthProvider;","export const URL = 'https://emphasoft-test-assignment.herokuapp.com';\r\nexport const POST = 'POST';\r\nexport const GET = 'GET';\r\nexport const PUT = 'PUT';\r\n\r\nexport const apiFetch = (url, method = GET, body = {}, token = true) => {\r\n  let obj = {\r\n    method: method,\r\n    headers: {\r\n      'accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    }\r\n  };\r\n  if(token) {\r\n    const TOKEN = localStorage.getItem('token');\r\n    obj = {\r\n      ...obj,\r\n      headers: {\r\n        ...obj.headers,\r\n        'Authorization': `Token ${TOKEN}`\r\n      }\r\n    }\r\n  }\r\n  if(method !== GET) {\r\n    obj = {\r\n      ...obj,\r\n      body: JSON.stringify(body),\r\n    } \r\n  }\r\n  return fetch(url, obj)\r\n    .then(response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      } else {\r\n        throw new Error();\r\n      }\r\n    })\r\n}","import { stopSubmit } from \"redux-form\";\r\nimport { fetchCreate } from \"../components/api/fetchCreate\";\r\nimport { fetchEdit } from \"../components/api/fetchEdit\";\r\nimport { fetchToken } from \"../components/api/fetchToken\";\r\nimport { fetchUser } from \"../components/api/fetchUser\";\r\nimport { fetchUsers } from \"../components/api/fetchUsers\";\r\nimport { LOGIN_FAIL, LOGIN_SUCCESS, GET_USERS, LOGOUT, GET_USER, EDIT_USER, CREATE_USER, CLEAR, ERROR } from \"./actions\";\r\n\r\nexport function loginSuccess(token) {\r\n  return { type: LOGIN_SUCCESS, token };\r\n}\r\n\r\nexport function loginFail() {\r\n  return { type: LOGIN_FAIL };\r\n}\r\n\r\nexport function getData(users) {\r\n  return { type: GET_USERS, users};\r\n}\r\n\r\nexport function logout() {\r\n  return { type: LOGOUT };\r\n}\r\n\r\nexport function getUser(user) {\r\n  return { type: GET_USER, user }\r\n}\r\n\r\nexport function editUser(user) {\r\n  return { type: EDIT_USER, user }\r\n}\r\n\r\nexport function createUser(user) {\r\n  return { type: CREATE_USER, user}\r\n}\r\n\r\nexport function clear() {\r\n  return { type: CLEAR }\r\n}\r\n\r\nexport function createError(err) {\r\n  return { type: ERROR, err }\r\n}\r\n\r\nexport const login = (data) => (dispatch) => {\r\n  return fetchToken(data)\r\n    .then(token => {\r\n      dispatch(loginSuccess(token.token));\r\n    })\r\n    .catch(err => {\r\n      dispatch(loginFail());\r\n      dispatch(stopSubmit(\"authForm\", {_error: \"Can't authorizate\"}));\r\n    })\r\n};\r\n\r\nexport const getUsers = () => (dispatch) => {\r\n  return fetchUsers()\r\n    .then(users => {\r\n      dispatch(getData(users));\r\n    })\r\n    .catch(err => {  \r\n      dispatch(loginFail());\r\n    })\r\n}\r\n\r\nexport const get = (id) => (dispatch) => {\r\n  return fetchUser(id)\r\n    .then(user => {\r\n      dispatch(getUser(user));   \r\n    })\r\n    .catch(err => {  \r\n      dispatch(createError(err));\r\n    })\r\n}\r\n\r\nexport const edit = (id, user) => (dispatch) => {\r\n  return fetchEdit(id, user)\r\n  .then(data => {\r\n    dispatch(editUser(data));\r\n  })\r\n  .catch(err => {  \r\n    dispatch(createError(err));\r\n  })\r\n}\r\n\r\nexport const create = (user) => (dispatch) => {\r\n  return fetchCreate(user)\r\n  .then(data => {\r\n    dispatch(createUser(data));  \r\n  })\r\n  .catch(err => {  \r\n    dispatch(createError(err));\r\n  })\r\n}","import { apiFetch, URL, POST } from \"./apiFetch\"\r\n\r\nexport const fetchToken = (data) => {\r\n  return apiFetch(URL+'/api-token-auth/', POST, data, false)\r\n}","import { apiFetch, URL } from './apiFetch';\r\n\r\nexport const fetchUsers = () => {\r\n  return apiFetch(URL+'/api/v1/users/');\r\n}","import { apiFetch, URL } from \"./apiFetch\"\r\n\r\nexport const fetchUser = (id) => {\r\n  return apiFetch(URL+`/api/v1/users/${id}/`)\r\n}","import { apiFetch, URL, PUT } from \"./apiFetch\"\r\n\r\nexport const fetchEdit = (id, user) => {\r\n  return apiFetch(URL+`/api/v1/users/${id}/`, PUT, user)\r\n}","import { apiFetch, POST, URL } from \"./apiFetch\"\r\n\r\nexport const fetchCreate = (user) => {\r\n  return apiFetch(URL+`/api/v1/users/`, POST, user)\r\n}","export const validate = values => {\r\n  const errors = {};\r\n  if (!values.username) {\r\n    errors.username = 'The field can\\'t be empty';\r\n  } else if (values.username.length > 150) {\r\n    errors.username = 'Must be 150 characters or less';\r\n  } else if (!/^[\\w.@+-]+$/.test(values.username)) {\r\n    errors.username = 'Invalid username';\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = 'The field can\\'t be empty';\r\n  } else if (values.password.length > 128) {\r\n    errors.password = 'Must be 128 characters or less';\r\n  } else if (!/^(?=.*[A-Z])(?=.*\\d).{8,}$/.test(values.password)) {\r\n    errors.password = 'Invalid password';\r\n  }\r\n\r\n  if(values.first_name) {\r\n    if (values.first_name.length > 30) {\r\n        errors.first_name = 'Must be 30 characters or less'\r\n    }\r\n  }\r\n\r\n  if(values.last_name) {\r\n    if (values.last_name.length > 150) {\r\n      errors.last_name = 'Must be 150 characters or less'\r\n    }\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst InputField = ({meta, input, className, placeholder, type, autoComplete}) => {\r\n\r\n  return (\r\n    <>\r\n      <input {...input} className={className} placeholder={placeholder} type={type} autoComplete={autoComplete} />\r\n      <div className=\"form__error\">{(meta.touched && meta.error) && meta.error}</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { validate } from '../../utils/validate';\r\nimport InputField from '../InputFields';\r\nimport './Auth.css';\r\n\r\nconst Auth = (props) => {\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"container\">\r\n        <h2 className=\"auth__title\">Sign in</h2>\r\n        <form className=\"auth-form\" onSubmit={props.handleSubmit}>\r\n          <div className=\"auth-form__item\">\r\n            <Field \r\n              className=\"auth-form__input\"\r\n              component={InputField}\r\n              type=\"text\" \r\n              placeholder=\"Username\" \r\n              name=\"username\"\r\n              autoComplete=\"username\" />\r\n          </div>\r\n          <div className=\"auth-form__item\">\r\n            <Field \r\n              className=\"auth-form__input\"\r\n              component={InputField}\r\n              type=\"password\" \r\n              placeholder=\"Password\" \r\n              name=\"password\"\r\n              autoComplete=\"current-password\" />\r\n          </div>\r\n          <div className=\"form__error\">{props.error && props.error}</div>\r\n          <button className=\"button auth-form__button\" type=\"submit\">LogIn</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'authForm',\r\n  validate\r\n})(Auth);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login } from '../../redux/actionCreators';\r\nimport Auth from './Auth';\r\n\r\nconst AuthContainer = (props) => {\r\n\r\n  if(props.isAuth) {\r\n    return <Redirect to=\"/\" />\r\n  } \r\n  \r\n  const handleSubmit = (values) => {\r\n    props.login(values);\r\n  }\r\n\r\n  return (\r\n    <Auth onSubmit={handleSubmit} />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.login.isAuth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (username, password) => {\r\n      dispatch(login(username, password))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { validate } from '../../utils/validate';\r\nimport InputField from '../InputFields';\r\nimport './Form.css';\r\n\r\nfunction Form(props) {\r\n \r\n  return (\r\n    <div className=\"forms\">\r\n      <div className=\"wrapper\">\r\n        <h2>{props.title}</h2>\r\n        <form className=\"form\" onSubmit={props.handleSubmit}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <Field className=\"form__input\" component={InputField} type=\"text\" name=\"username\" />\r\n          <label htmlFor=\"first_name\">Firstname</label>\r\n          <Field className=\"form__input\" component={InputField} type=\"text\" name=\"first_name\" />\r\n          <label htmlFor=\"last_name\">Lastname</label>\r\n          <Field className=\"form__input\" component={InputField} type=\"text\" name=\"last_name\" />\r\n          <label htmlFor=\"password\">New password</label>\r\n          <Field className=\"form__input\" component={InputField} type=\"text\" name=\"password\" />\r\n          <span className=\"form__active\">\r\n            <label htmlFor=\"is_active\">Is active</label>\r\n            <Field className=\"form__input\" component=\"input\" type=\"checkbox\" name=\"is_active\" />\r\n          </span>\r\n          <div className=\"form__buttons\">\r\n            <button className=\"button form__button\" type=\"submit\">Save</button>\r\n            <Link to=\"/\">\r\n              <button className=\"button form__button form__button_cancel\">Cancel</button>\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    initialValues: {\r\n      username: ownProps.user?.username || '',\r\n      first_name: ownProps.user?.first_name || '',\r\n      last_name: ownProps.user?.last_name || '',\r\n      is_active: ownProps.user?.is_active || true,\r\n      password: ''\r\n    }\r\n  }\r\n}\r\n\r\nexport const createForm = (formName, enableReinitialize = false) => {\r\n  return connect(mapStateToProps)(reduxForm({\r\n    form: formName,\r\n    enableReinitialize,\r\n    validate\r\n  })(Form));\r\n}","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { clear, create } from '../../redux/actionCreators';\r\nimport { createForm } from '../form';\r\n\r\nconst CreateForm = createForm('createForm');\r\n\r\nconst CreateFormContainer = ({ createUser, clear, create }) => {\r\n\r\n  useEffect(() => {\r\n    clear();\r\n  }, [createUser, clear]);\r\n\r\n  if(createUser) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  const handleSubmit = (values) => {\r\n    create(values);\r\n  }\r\n \r\n  return (\r\n    <CreateForm title=\"Create user\" onSubmit={handleSubmit} />\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    create: (user) => {\r\n      dispatch(create(user))\r\n    },\r\n    clear: () => {\r\n      dispatch(clear());\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    createUser: state.users.createUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFormContainer);","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { clear, edit, get } from '../../redux/actionCreators';\r\nimport { createForm } from '../form';\r\n\r\nconst EditForm = createForm('editForm', true)\r\n\r\nconst EditFormContainer = ({ get, match, edit, user, editUser, clear }) => {\r\n  \r\n  useEffect(() => {\r\n    clear();\r\n  }, [editUser, clear]);\r\n\r\n  useEffect(() => {\r\n    get(match.params.id);\r\n  }, [match.params.id, get]);\r\n\r\n  if(editUser) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  const handleSubmit = (values) => {\r\n    edit(match.params.id, values);\r\n  }\r\n \r\n  return user && <EditForm title='Edit username' user={user} onSubmit={handleSubmit} />;\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    get: (id) => {\r\n      dispatch(get(id));\r\n    },\r\n    edit: (id, user) => {\r\n      dispatch(edit(id, user));\r\n    },\r\n    clear: () => {\r\n      dispatch(clear());\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.users.user,\r\n    editUser: state.users.editUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditFormContainer);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CreateButton= () => {\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <div className=\"wrapper\">\r\n        <Link className=\"button\" to=\"/create\">\r\n          <button className=\"button form__button\">Add user</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateButton;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout, clear } from '../../../redux/actionCreators';\r\nimport './Header.css';\r\n\r\nconst Header = (props) => {\r\n\r\n  const handleClick = () => {\r\n    props.logout();\r\n    props.clear();\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"wrapper header__wrapper\">\r\n        <h2 className=\"header__title\">Users list</h2>\r\n        <button className=\"button header__button\" onClick={handleClick}>Logout</button>\r\n      </div>\r\n    </header>\r\n    \r\n  )\r\n}\r\n\r\nconst mapDispathToProps = (dispath) => {\r\n  return {\r\n    logout: () => {\r\n      dispath(logout())\r\n    },\r\n    clear: () => {\r\n      dispath(clear())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispathToProps)(Header);","import React from 'react';\r\nimport './Users.css';\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <div className=\"users__title\">\r\n      <span className=\"users__id\">ID</span>\r\n      <span className=\"users__name\">Firstname</span>\r\n      <span className=\"users__name\">Lastname</span>\r\n      <span className=\"users__name\">Username</span>\r\n      <span className=\"users__button\"></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst User = (props) => {\r\n\r\n  return (\r\n    <li className=\"users__item\">\r\n      <span className=\"users__id\">{props.user.id}</span>\r\n      <span className=\"users__name\">{props.user.first_name ? props.user.first_name : '-'}</span>\r\n      <span className=\"users__name\">{props.user.last_name ? props.user.last_name : '-'}</span>\r\n      <span className=\"users__name\">{props.user.username}</span>\r\n      <Link to={`/users/${props.user.id}`}>\r\n        <button className=\"button users__button\">Edit</button>\r\n      </Link>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport User from './User';\r\nimport './Users.css';\r\n\r\nconst Users = ({ users }) => {\r\n\r\n  const renderUsers = users.map(user => <User key={user.id} user={user} />);\r\n\r\n  return (\r\n    <div className=\"users\">\r\n      <div className=\"wrapper\">\r\n        <Header />\r\n        <ul>\r\n          {renderUsers}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state.users.users,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Users);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUsers } from '../../redux/actionCreators';\r\nimport CreateButton from './CreateButton';\r\nimport Header from './header';\r\nimport Users from './users';\r\n\r\nconst Home = ({ getUsers }) => {\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, [getUsers]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <CreateButton />\r\n      <Users />     \r\n    </>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getUsers: () => {\r\n      dispatch(getUsers())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Home);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst AuthRoute = (props) => {\r\n  const { isAuth } = props;\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return <Route {...props} />;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.login.isAuth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport AuthContainer from '../auth';\r\nimport CreateFormContainer from '../createForm';\r\nimport EditFormContainer from '../editForm';\r\nimport Home from '../home';\r\nimport AuthRoute from './AuthRoute';\r\n\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter basename=\"/test_emphasoft\">\r\n      <AuthRoute path=\"/\" exact component={Home} />\r\n      <AuthRoute path=\"/users/:id\" component={EditFormContainer} />\r\n      <Route path=\"/login\" exact component={AuthContainer} />\r\n      <AuthRoute path=\"/create\" exact component={CreateFormContainer} />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport AuthProvider from './components/AuthProvider';\nimport Routes from './components/routes/Routes';\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Routes />\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}